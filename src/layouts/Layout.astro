---
import { ViewTransitions } from 'astro:transitions';
import Footer from '../components/layout/Footer.astro';
import Header from '../components/layout/Header.astro';

import Alpine from 'alpinejs';
import AlpineCollapse from '@alpinejs/collapse';
import AlpineFocus from '@alpinejs/focus';
import AlpineIntersect from '@alpinejs/intersect';
import AlpineMask from '@alpinejs/mask';

interface Props {
  description: string;
  title: string;
}

const { description, title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" x-data="theme">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/icons/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/assets/icons/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/assets/icons/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>
    <ViewTransitions />
    
    <!-- Alpine.js Core -->
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.14.9/dist/cdn.min.js" defer></script>

    <!-- Alpine.js Plugins -->
    <script src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.0.0/dist/collapse.min.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/@alpinejs/focus@3.0.0/dist/focus.min.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/@alpinejs/intersect@3.0.0/dist/intersect.min.js" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/@alpinejs/mask@3.0.0/dist/mask.min.js" defer></script>

    <!-- Initialize Alpine.js & Dark Mode -->
    <script type="module">
      window.Alpine = Alpine;
      Alpine.plugin(AlpineCollapse);
      Alpine.plugin(AlpineFocus);
      Alpine.plugin(AlpineIntersect);
      Alpine.plugin(AlpineMask);

      Alpine.store('theme', {
        init() {
          const storedTheme = localStorage.getItem('theme');
          this.isDark = storedTheme ? storedTheme === 'dark' : window.matchMedia('(prefers-color-scheme: dark)').matches;
        },
        isDark: false,
        toggle() {
          this.isDark = !this.isDark;
          localStorage.setItem('theme', this.isDark ? 'dark' : 'light');
        },
      });

      Alpine.start();
    </script>
  </head>

  <body x-bind:class="{ 'dark': isDark }" class="bg-primary-50 text-primary-950 antialiased transition">
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
    
    <style is:global>
      [x-cloak] {
        display: none !important;
      }

      /* Light Theme Colors */
      :root {
        --primary-bg: #ffffff;
        --primary-text: #127780;
        --secondary-bg: #15eda3;
        --secondary-text: #0fc083;
      }

      /* Dark Theme Colors */
      .dark {
        --primary-bg: #0c4d53;
        --primary-text: #ffffff;
        --secondary-bg: #2cffb7;
        --secondary-text: #30c6d3;
      }

      /* Global Styles */
      body {
        background-color: var(--primary-bg);
        color: var(--primary-text);
        font-family: 'Radnika Next', sans-serif;
      }

      header {
        background-color: var(--secondary-bg);
      }

      footer {
        background-color: var(--secondary-bg);
        color: var(--secondary-text);
      }
    </style>
  </body>
</html>

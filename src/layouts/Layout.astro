---
import Header from '../components/layout/Header.astro';
import Footer from '../components/layout/Footer.astro';
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={"hello"} />
    <title>{"Green Orbit Digital"}</title>
  <!-- Other head elements, like meta tags, stylesheets, etc. -->
  <script src="/assets/js/alpinejs/dist/cdn.min.js" defer></script>

    <link rel="apple-touch-icon" sizes="180x180" href="/assets/icons/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/assets/icons/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/assets/icons/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />

    <!-- Alpine.js Core (ensure it's loaded before any Alpine directives) -->
    <script defer src="/assets/js/alpinejs/dist/cdn.min.js" type="module"></script>

    <!-- Alpine.js Plugins -->
    <script defer src="assets/js/alpinejs/src/plugin.js" crossorigin="anonymous"</script>    
    <script defer src="assets/js/@alpinejs/collapse/dist/cdn.min.js" crossorigin="anonymous" ></script>
    <script defer src="assets/js/@alpinejs/focus/dist/cdn.min.js" crossorigin="anonymous"></script>
    <script defer src="assets/js/@alpinejs/intersect/dist/cdn.min.js" crossorigin="anonymous"></script>
    <script defer src="assets/js/@alpinejs/mask/dist/cdn.min.js" crossorigin="anonymous"></script>

    <!-- Load Alpine.js Persist plugin -->
    <script defer src="assets/js/@alpinejs/persist/dist/cdn.min.js" crossorigin="anonymous"></script>


    <!-- Load CSS and JS for dark theme and view transition -->
    <style is:global>
      [x-cloak] {
        display: none !important;
      }
      :root {
        --primary-bg: #ffffff;
        --primary-text: #127780;
        --secondary-bg: #15eda3;
        --secondary-text: #0fc083;
      }
      .dark {
        --primary-bg: #0c4d53;
        --primary-text: #ffffff;
        --secondary-bg: #2cffb7;
        --secondary-text: #30c6d3;
      }
      body {
        background-color: var(--primary-bg);
        color: var(--primary-text);
        font-family: 'Radnika Next', sans-serif;
      }
      header, footer {
        background-color: var(--secondary-bg);
        color: var(--secondary-text);
      }
    </style>
  </head>

  <body x-data="theme" x-bind:class="{ 'dark': $store.theme.isDark }" class="bg-primary-50 text-primary-950 antialiased transition">
    <Header />
    <main>
      <slot />
    </main>
    <Footer />

    <!-- Alpine Store Initialization (for theme management) -->
    <script>
      document.addEventListener("alpine:init", () => {
        Alpine.store('theme', {
          isDark: false,  // Default theme is light
          toggle() {
            this.isDark = !this.isDark;  // Toggle between dark and light themes
          }
        });

        console.log("✅ Alpine.js initialized and theme store created.");
      });
    </script>

    <!-- Alpine.js Initialization (ensure Alpine is fully loaded) -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        // Ensure Alpine is ready before we do anything with it
        if (window.Alpine) {
          window.Alpine.start();
          console.log("✅ Alpine.js started.");
        } else {
          console.error("⚠️ Alpine.js failed to load.");
        }
      });
    </script>

    <!-- View Transition API (after Alpine.js is initialized) -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        // Check if the ViewTransition API is supported
        if (document.body && "startViewTransition" in document.body) {
          const body = document.body;

          // Use the ViewTransition API if supported
          const transition = body.startViewTransition({
            mode: 'default',  // Adjust the mode depending on your needs
          });

          // Apply the transition (this might vary based on your desired behavior)
          transition.enter().then(() => {
            console.log("✅ View transition completed.");
          }).catch((error) => {
            console.error("⚠️ Error during transition: ", error);
          });
        } else {
          // Fallback to a default transition (e.g., a simple CSS fade-in)
          console.log("⚠️ ViewTransition API not supported. Falling back to CSS transition.");
          
          // Add a CSS class to animate the fallback transition
          document.body.classList.add('fallback-transition');
          
          // Optionally, delay the fallback transition so it's visually smooth
          setTimeout(() => {
            document.body.classList.remove('fallback-transition');
            console.log("✅ Fallback transition completed.");
          }, 1000); // Adjust timing as necessary
        }
      });
    </script>

    <style>
      /* Fallback CSS transition */
      .fallback-transition {
        opacity: 0;
        transition: opacity 1s ease-in-out;
      }

      /* Once the fallback transition completes, make it fully visible */
      body {
        opacity: 1;
      }
    </style>

    <!-- Debugging for Alpine.js Initialization -->
    <script>
      window.addEventListener('alpine:init', () => {
        console.log("✅ Alpine.js initialized.");
      });
    </script>
  </body>
</html>
